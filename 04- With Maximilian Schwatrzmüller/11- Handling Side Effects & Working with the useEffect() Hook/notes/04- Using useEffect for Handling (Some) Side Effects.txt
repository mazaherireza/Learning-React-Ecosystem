Using useEffect for Handling (Some) Side Effects
------------------------------------------------
... to handle this side effect in a better way.

... useEffect, does not return a value, ... needs two arguments, 
... the first argument is a function that should wrap your side effect code ... location fetching ...

... the second argument is an array of dependencies of that effect function. <------------ **
... [], ... you will not run into inifinite loop problem.

... the idea behind useEffect, ... function which you pass as the first argument to useEffect will be executed by React 
AFTER every component execution. <---------- **
... after JSX code has been returned ... 

... this side effect function will be executed by React.
... after the component function is done executing.

...
If you define this dependencies array, React will actually take a look at the dependencies specified there 
and it will only execute this effect function again, if the dependency values changed. <--------------- **

... [] ... no dependencies ... React never re-executes this effect function ... it only executes it once <------------ **
AFTER this component function was executed for the first time.

... if you omit this dependencies array, effect function would be executed AFTER every component render cycle ...
infinite loop.