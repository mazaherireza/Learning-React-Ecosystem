Avoid Intersecting States!
--------------------------
... we're actually on the edge of writing suboptimal (less than optimal) React code, 

... information about the different turns we had in our game thus far,
... which turns were taken by the different players, ...

... with every button click.

App.jsx
-------
... to manage an array of turn data ...
... whenever a square was selected, we wanna add a new turn to this array.
... the turn that took place.

Doses this approach make sense?
... we also got another place, where we're storing information about the turns that already took place,
... GameBoard component.
... we just dont't know in which order they were clicked.
So we already got a lot of information stored in this state.

Adding a new state to store kind of the same information just with a little bit of extra data 
is something you typically wanna avoid. 

... it makes more sense to lift the state that manages the current information 
about the progress of our game up from the GameBoard component to the app component.

... switch to this gameTurns state <------------ **	
... we can manage this information about these different button clicks as a list
and then derive both the information we need for the Log ... GameBoard from such an array of gameTurns.