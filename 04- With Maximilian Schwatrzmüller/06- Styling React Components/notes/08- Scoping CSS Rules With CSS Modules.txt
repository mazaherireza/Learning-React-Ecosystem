Scoping CSS Rules With CSS Modules
----------------------------------
... I as a developer am forced to carefully think about my rules and my selectors ...
It would be nicer if this would instead be scoped so if it couldn't affect any other component ...

... that's exactly the behavior you can achieve with CSS modules,
which allows you to write Vanilla CSS code and rules that are then scoped.

Vanilla CSS with file-specific scoping <--------------------- **

... is an approach ... needs to be implemented and enforced by the build process that's used in your React project.
It's not a default browser or JS feature. <-------------- **
... the build tool will transform your CSS class names ... two class names are guaranteed to be unique per file.

... they will now get scoped if you now rename the Header.css file to Header.module.css 
... .module naming pattern is basically a signal for the underlying build process (Vite buid tool)
to process this file slightly differently, ... we have to import it differently, ...

import classes (whatever you want) from "./Header.module.css";

<p className={classes.paragraph}
... but classes is a fitting name, because this object will contain your class names transformed to unique class names.

... this strange class name was in the end generated by the build tool automatically.

CSS Modules: Advantages & Disadvantages
---------------------------------------
Advantages
CSS code is decoupled from JSX code
You write CSS code as you (maybe) know and (maybe) love it
CSS code can be written by another developer who needs only a minimal amount of access to your JSX code
CSS classes are scoped to the component (files) which import them --> no CSS class names clashes

Disadvantage
You need to know CSS
You may end up with many relatively small CSS files in your project